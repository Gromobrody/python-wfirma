[tool.poetry]
name = "python-wfirma"
version = "0.0.0"
description = "Python wrapper for wFirma API."
authors = ["Dominik Kozaczko <dominik@kozaczko.info>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/gromobrody/python-wfirma"
repository = "https://github.com/gromobrody/python-wfirma"
documentation = "https://python-wfirma.readthedocs.io"
packages = [
    { include = "wfirma", from = "src" },
]
classifiers = [
    "Development Status :: 1 - Planning",
]

[tool.poetry.urls]
Changelog = "https://github.com/gromobrody/python-wfirma/releases"

[tool.poetry.dependencies]
python = "^3.12"
typer = "^0.12.3"
pydantic = "^2.7.1"
httpx = "^0.27.0"
anyio = {version = "^4.3.0", extras = ["trio"]}
pydantic-xml = "^2.11.0"



[tool.poetry.group.dev.dependencies]
Pygments = "^2.18.0"
coverage = {version = "^7.5.1", extras = ["toml"]}
darglint = "^1.8.1"
furo = "^2024.5.6"
pre-commit = "^3.7.1"
pre-commit-hooks = "^4.6.0"
safety = "^3.2.0"
typeguard = "^4.2.1"
myst-parser = "^3.0.1"
ruff = "^0.4.5"
mypy = "^1.10.0"
ipython = "^8.24.0"
rich = "^13.7.1"


[tool.poetry.group.docs.dependencies]
sphinx = "^7.3.7"
sphinx-autobuild = "^2024.4.16"
sphinx-click = "^6.0.0"


[tool.poetry.group.tests.dependencies]
xdoctest = {version = "^1.1.3", extras = ["colors"]}
pytest = "^8.2.1"


[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["wfirma", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["B","B9","C","D","E","F","N","S","W"]
ignore = ["E203","E501", "D203", "D213"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"





[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
